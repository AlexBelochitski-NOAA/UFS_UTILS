.TH "/home/ed/UFS_UTILS/sorc/grid_tools.fd/regional_esg_grid.fd/pmat4.f90" 3 "Fri Mar 26 2021" "Version 1.0.0" "grid_tools" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/ed/UFS_UTILS/sorc/grid_tools.fd/regional_esg_grid.fd/pmat4.f90 \- Euclidean geometry, geometric (stereographic) projections, related transformations (Mobius)\&.  

.SH SYNOPSIS
.br
.PP
.SS "Data Types"

.in +1c
.ti -1c
.RI "interface \fBpmat4::absv\fP"
.br
.ti -1c
.RI "interface \fBpmat4::axial\fP"
.br
.ti -1c
.RI "interface \fBpmat4::axtoq\fP"
.br
.ti -1c
.RI "interface \fBpmat4::axtorot\fP"
.br
.ti -1c
.RI "interface \fBpmat4::corral\fP"
.br
.ti -1c
.RI "interface \fBpmat4::cross_product\fP"
.br
.ti -1c
.RI "interface \fBpmat4::ctoz\fP"
.br
.ti -1c
.RI "interface \fBpmat4::det\fP"
.br
.ti -1c
.RI "interface \fBpmat4::diag\fP"
.br
.ti -1c
.RI "interface \fBpmat4::dlltoxy\fP"
.br
.ti -1c
.RI "interface \fBpmat4::expmat\fP"
.br
.ti -1c
.RI "interface \fBpmat4::gram\fP"
.br
.ti -1c
.RI "interface \fBpmat4::hav\fP"
.br
.ti -1c
.RI "interface \fBpmat4::huarea\fP"
.br
.ti -1c
.RI "interface \fBpmat4::identity\fP"
.br
.ti -1c
.RI "interface \fBpmat4::mobius\fP"
.br
.ti -1c
.RI "interface \fBpmat4::mobiusi\fP"
.br
.ti -1c
.RI "interface \fBpmat4::mulqq\fP"
.br
.ti -1c
.RI "interface \fBpmat4::normalize\fP"
.br
.ti -1c
.RI "interface \fBpmat4::normalized\fP"
.br
.ti -1c
.RI "interface \fBpmat4::orthogonalized\fP"
.br
.ti -1c
.RI "interface \fBpmat4::outer_product\fP"
.br
.ti -1c
.RI "interface \fBpmat4::qtoax\fP"
.br
.ti -1c
.RI "interface \fBpmat4::qtorot\fP"
.br
.ti -1c
.RI "interface \fBpmat4::qtospin\fP"
.br
.ti -1c
.RI "interface \fBpmat4::rottoax\fP"
.br
.ti -1c
.RI "interface \fBpmat4::rottoq\fP"
.br
.ti -1c
.RI "interface \fBpmat4::rowops\fP"
.br
.ti -1c
.RI "interface \fBpmat4::sarea\fP"
.br
.ti -1c
.RI "interface \fBpmat4::setem\fP"
.br
.ti -1c
.RI "interface \fBpmat4::setmobius\fP"
.br
.ti -1c
.RI "interface \fBpmat4::spintoq\fP"
.br
.ti -1c
.RI "interface \fBpmat4::trace\fP"
.br
.ti -1c
.RI "interface \fBpmat4::triple_product\fP"
.br
.ti -1c
.RI "interface \fBpmat4::znfun\fP"
.br
.ti -1c
.RI "interface \fBpmat4::zntay\fP"
.br
.ti -1c
.RI "interface \fBpmat4::ztoc\fP"
.br
.in -1c
.SS "Modules"

.in +1c
.ti -1c
.RI "module \fBpmat4\fP"
.br
.RI "Module for handy vector and matrix operations in Euclidean geometry\&. "
.in -1c
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "real(dp) function \fBpmat4::absv_d\fP (a)"
.br
.RI "Doing sqrt calculation for absv_d function\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::absv_s\fP (a)"
.br
.RI "Doing sqrt calculation for absv_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(3) \fBpmat4::axial33_d\fP (b)"
.br
.RI "Calculation for axial33_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(3) \fBpmat4::axial33_s\fP (b)"
.br
.RI "Calculation for axial33_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(3, 3) \fBpmat4::axial3_d\fP (a)"
.br
.RI "Calculation for axial3_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(3, 3) \fBpmat4::axial3_s\fP (a)"
.br
.RI "Calculation for axial3_s function\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::axtoq\fP (v, q)"
.br
.RI "Go from an axial 3-vector to its equivalent quaternion\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::axtorot\fP (ax3, orth33)"
.br
.RI "Construct the 3*3 orthogonal matrix, orth33, that corresponds to the proper rotation encoded by the 3-vector, ax3\&. "
.ti -1c
.RI "subroutine \fBpmat4::cmobius\fP (aa, bb, cc, dd, vz, vw)"
.br
.RI "Perform a complex Mobius transformation from cartesian vz to cartesian vw where the transformation coefficients are the standard aa,bb,cc,dd\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::corral\fP (m, n, mask, a, d, aa, e)"
.br
.RI "Find positive diagonals D and E and a Lagrange multiplier F that minimize the row-sum +column-sum of masked terms, (D_i +log(|A_ij|) +E_j)^2 subject to the single constraint, sum_j E_j =0, where the mask permits only nonnegligible A_ij to participate in the quadratic quantities\&. "
.ti -1c
.RI "real(dp) function, dimension(3) \fBpmat4::cross_product_d\fP (a, b)"
.br
.RI "Doing calculation for cross_product_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(3) \fBpmat4::cross_product_s\fP (a, b)"
.br
.RI "Doing calculation for cross_product_s function\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::ctoz\fP (v, z, infz)"
.br
.RI "Utility code for various Mobius transformations\&. "
.ti -1c
.RI "subroutine \fBcyclic\fP (u1, u2, u3, d1, d2, d3)"
.br
.RI "Shift switch variable\&. "
.ti -1c
.RI "subroutine \fBcyclic\fP (u1, u2, u3, d1, d2, d3)"
.br
.RI "Shift switch variable\&. "
.ti -1c
.RI "real(dp) function \fBpmat4::det_d\fP (a)"
.br
.RI "Calculation for det_d function\&. "
.ti -1c
.RI "integer(spi) function \fBpmat4::det_i\fP (a)"
.br
.RI "Calculation for det_i function\&. "
.ti -1c
.RI "integer(dpi) function \fBpmat4::det_id\fP (a)"
.br
.RI "Calculation for det_id function\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::det_s\fP (a)"
.br
.RI "Calculation for det_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(size(a), size(a)) \fBpmat4::diagn_d\fP (a)"
.br
.RI "Calculation for diagn_d function\&. "
.ti -1c
.RI "integer(spi) function, dimension(size(a), size(a)) \fBpmat4::diagn_i\fP (a)"
.br
.RI "Calculation for diagn_i function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(a), size(a)) \fBpmat4::diagn_s\fP (a)"
.br
.RI "Calculation for diagn_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(size(b, 1)) \fBpmat4::diagnn_d\fP (b)"
.br
.RI "Calculation for diagnn_d function\&. "
.ti -1c
.RI "integer(spi) function, dimension(size(b, 1)) \fBpmat4::diagnn_i\fP (b)"
.br
.RI "Calculation for diagnn_i function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(b, 1)) \fBpmat4::diagnn_s\fP (b)"
.br
.RI "Calculation for diagnn_s function\&. "
.ti -1c
.RI "subroutine \fBpmat4::dlltoxy_d\fP (rlat, drlat, drlon, x2)"
.br
.RI "Calculate dlltoxy_d\&. "
.ti -1c
.RI "subroutine \fBpmat4::dlltoxy_s\fP (rlat, drlat, drlon, x2)"
.br
.RI "Calculate dlltoxy_s\&. "
.ti -1c
.RI "real(dp) function \fBpmat4::dqarea_d\fP (rlat, drlata, drlona, drlatb, drlonb, drlatc, drlonc)"
.br
.RI "Compute the area using dqarea_d\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::dqarea_s\fP (rlat, drlata, drlona, drlatb, drlonb, drlatc, drlonc)"
.br
.RI "Compute the area of the spherical quadrilateral with a vertex at latitude rlat, and three other vertices at A, B, and C inturn, whose incremented latitudes and longitudes are drlata,drlona (for A), drlatb,drlonb (for B), and drlatc,drlonc (for C)\&. "
.ti -1c
.RI "real(dp) function \fBpmat4::dtarea_d\fP (rlat, drlata, drlona, drlatb, drlonb)"
.br
.RI "Compute the area with dtarea_d\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::dtarea_s\fP (rlat, drlata, drlona, drlatb, drlonb)"
.br
.RI "Compute the area of the spherical triangle with a vertex at latitude rlat, and two other vertices, A and B, whose incremented latitudes and longitudes are drlata,drlona (for A) and drlatb,drlonb (for B)\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::expmat\fP (n, a, b, detb)"
.br
.RI "Evaluate the exponential, b, of a matrix, a, of degree n\&. "
.ti -1c
.RI "subroutine \fBpmat4::expmatd\fP (n, a, b, bd, detb, detbd)"
.br
.RI "Like expmat, but for the 1st derivatives also\&. "
.ti -1c
.RI "subroutine \fBpmat4::expmatdd\fP (n, a, b, bd, bdd, detb, detbd, detbdd)"
.br
.RI "Like expmat, but for the 1st and 2nd derivatives also\&. "
.ti -1c
.RI "subroutine \fBpmat4::gram_d\fP (as, b, nrank, det)"
.br
.RI "??? "
.ti -1c
.RI "subroutine \fBpmat4::gram_s\fP (as, b, nrank, det)"
.br
.RI "??? "
.ti -1c
.RI "subroutine \fBpmat4::graml_d\fP (as, b, nrank, detsign, ldet)"
.br
.RI "A version of gram_d where the determinant information is returned in logarithmic form (to avoid overflows for large matrices)\&. "
.ti -1c
.RI "real(dp) function \fBpmat4::hav_d\fP (t)"
.br
.RI "Doing hav_d function\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::hav_s\fP (t)"
.br
.RI "Haversine function\&. "
.ti -1c
.RI "real(dp) function \fBpmat4::huarea_d\fP (sa, sb)"
.br
.RI "Calculation for huarea_d function\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::huarea_s\fP (sa, sb)"
.br
.RI "Spherical area of right-angle triangle whose orthogonal sides have orthographic projection dimensions, sa and sb\&. "
.ti -1c
.RI "integer(spi) function, dimension(3, 3) \fBpmat4::identity3_i\fP ()"
.br
.RI "Calculation for identity3_i function\&. "
.ti -1c
.RI "integer(spi) function, dimension(n, n) \fBpmat4::identity_i\fP (n)"
.br
.RI "Calculation for identity_i function\&. "
.ti -1c
.RI "real(dp) function, dimension(0:3), public \fBpmat4::mulqq\fP (a, b)"
.br
.RI "Multiply quaternions, a*b, assuming operation performed from right to left\&. "
.ti -1c
.RI "subroutine \fBpmat4::normalize_d\fP (v)"
.br
.RI "Doing normalize_d calculation for given vector\&. "
.ti -1c
.RI "subroutine \fBpmat4::normalize_s\fP (v)"
.br
.RI "Normalize the given vector\&. "
.ti -1c
.RI "real(dp) function, dimension(size(a)) \fBpmat4::normalized_d\fP (a)"
.br
.RI "Doing calculation for normalized_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(a)) \fBpmat4::normalized_s\fP (a)"
.br
.RI "Doing calculation for normalized_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(size(u)) \fBpmat4::orthogonalized_d\fP (u, a)"
.br
.RI "Doing calculation for orthogonalized_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(u)) \fBpmat4::orthogonalized_s\fP (u, a)"
.br
.RI "Doing calculation for orthogonalized_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(size(a), size(b)) \fBpmat4::outer_product_d\fP (a, b)"
.br
.RI "Calculation for outer_product_d function\&. "
.ti -1c
.RI "integer(spi) function, dimension(size(a), size(b)) \fBpmat4::outer_product_i\fP (a, b)"
.br
.RI "Calculation for outer_product_i function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(a), size(b)) \fBpmat4::outer_product_s\fP (a, b)"
.br
.RI "Doing calculation for outer_product_s function\&. "
.ti -1c
.RI "subroutine \fBpmat4::plaingram_d\fP (b, nrank)"
.br
.RI "A 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. "
.ti -1c
.RI "subroutine \fBpmat4::plaingram_s\fP (b, nrank)"
.br
.RI "A 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::qtoax\fP (q, v)"
.br
.RI "Go from quaternion to axial 3-vector\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::qtorot\fP (q, rot)"
.br
.RI "Go from quaternion to rotation matrix representations\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::qtospin\fP (q, cspin)"
.br
.RI "Go from the quaternion to the spinor representation\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::rottoax\fP (orth33, ax3)"
.br
.RI "Assuming that given orth33 is a 3*3 proper rotation matrix, derive an axial 3-vector, ax3, such that orth33 is implied by ax3 when the latter is interpreted as encoding a rotation (as in subroutine axtorot)\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::rottoq\fP (rot, q)"
.br
.RI "Go from rotation matrix to quaternion representation\&. "
.ti -1c
.RI "subroutine \fBpmat4::rowgram\fP (m, n, a, ipiv, tt, b, rank)"
.br
.RI "Without changing (tall) rectangular input matrix a, perform pivoted gram- Schmidt operations to orthogonalize the rows, until rows that remain become negligible\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::rowops\fP (m, n, ipiv, tt, v, vv)"
.br
.RI "Apply the row-operations, implied by ipiv and tt returned by rowgram, to the single column vector, v, to produce the transformed vector vv\&. "
.ti -1c
.RI "real(dp) function \fBpmat4::sarea_d\fP (v1, v2, v3)"
.br
.RI "Compute the area of sarea_d, {v1,v2,v3}\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::sarea_s\fP (v1, v2, v3)"
.br
.RI "Compute the area of the spherical triangle, {v1,v2,v3}, measured in the right-handed sense, by dropping a perpendicular to u0 on the longest side so that the area becomes the sum of areas of the two simpler right-angled triangles\&. "
.ti -1c
.RI "subroutine \fBpmat4::setem\fP (c, d, e, g, r)"
.br
.RI "??? "
.ti -1c
.RI "subroutine, public \fBpmat4::setmobius\fP (xc0, xc1, xc2, aa, bb, cc, dd)"
.br
.RI "Find the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, for a standard (north-)polar stereographic transformation that takes cartesian point, xc0 to the north pole, xc1 to (lat=0,lon=0), xc2 to the south pole (=complex infinity)\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::spintoq\fP (cspin, q)"
.br
.RI "Go from the spinor to the quaternion representation\&. "
.ti -1c
.RI "real(dp) function \fBpmat4::trace_d\fP (b)"
.br
.RI "Calculation for trace_d function\&. "
.ti -1c
.RI "integer(spi) function \fBpmat4::trace_i\fP (b)"
.br
.RI "Calculation for trace_i function\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::trace_s\fP (b)"
.br
.RI "Calculation for trace_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(4) \fBpmat4::triple_cross_product_d\fP (u, v, w)"
.br
.RI "Doing calculation for triple_cross_product_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(4) \fBpmat4::triple_cross_product_s\fP (u, v, w)"
.br
.RI "Deliver the triple-cross-product, x, of the three 4-vectors, u, v, w, with the sign convention that ordered, {u,v,w,x} form a right-handed quartet in the generic case (determinant >= 0)\&. "
.ti -1c
.RI "real(dp) function \fBpmat4::triple_product_d\fP (a, b, c)"
.br
.RI "Calculation for triple_product_d function\&. "
.ti -1c
.RI "real(sp) function \fBpmat4::triple_product_s\fP (a, b, c)"
.br
.RI "Calculation for triple_product_s function\&. "
.ti -1c
.RI "subroutine \fBpmat4::zmobius\fP (aa, bb, cc, dd, z, infz, w, infw)"
.br
.RI "Perform a complex Mobius transformation from (z,infz) to (w,infw) where the transformation coefficients are the standard aa,bb,cc,dd\&. "
.ti -1c
.RI "subroutine \fBpmat4::zmobiusi\fP (aa, bb, cc, dd, zz, infz, zw, infw)"
.br
.RI "Perform the inverse of the mobius transformation with coefficients, {aa,bb,cc,dd}\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::znfun\fP (n, z, zn, znd, zndd, znddd)"
.br
.RI "??? "
.ti -1c
.RI "subroutine, public \fBpmat4::zntay\fP (n, z, zn)"
.br
.RI "??? "
.ti -1c
.RI "subroutine \fBpmat4::zsetmobius\fP (z0, infz0, z1, infz1, z2, infz2, aa, bb, cc, dd)"
.br
.RI "Find the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, that takes polar stereographic point, z0 to the north pole, z1 to (lat=0,lon=0), z2 to the south pole (=complex infinity)\&. "
.ti -1c
.RI "subroutine, public \fBpmat4::ztoc\fP (z, infz, v)"
.br
.RI "??? "
.ti -1c
.RI "subroutine \fBpmat4::ztocd\fP (z, infz, v, vd)"
.br
.RI "The convention adopted for the complex derivative is that, for a complex infinitesimal map displacement, delta_z, the corresponding infinitesimal change of cartesian vector position is delta_v given by: delta_v = Real(vd*delta_z)\&. "
.in -1c
.SH "Detailed Description"
.PP 
Euclidean geometry, geometric (stereographic) projections, related transformations (Mobius)\&. 


.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP
\fBDate\fP
.RS 4
Oct 2005 
.RE
.PP

.PP
Definition in file \fBpmat4\&.f90\fP\&.
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine sarea_s::cyclic (real(sp), dimension(3), intent(inout) u1, real(sp), dimension(3), intent(inout) u2, real(sp), dimension(3), intent(inout) u3, real(sp), intent(inout) d1, real(sp), intent(inout) d2, real(sp), intent(inout) d3)"

.PP
Shift switch variable\&. 
.PP
\fBParameters\fP
.RS 4
\fIu1\fP real variable to be shifted 
.br
\fIu2\fP real variable to be shifted 
.br
\fIu3\fP real variable to be shifted 
.br
\fId1\fP real variable to be shifted 
.br
\fId2\fP real variable to be shifted 
.br
\fId3\fP real variable to be shifted 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 692 of file pmat4\&.f90\&.
.PP
Referenced by pmat4::sarea::sarea_d(), and pmat4::sarea::sarea_s()\&.
.SS "subroutine sarea_d::cyclic (real(dp), dimension(3), intent(inout) u1, real(dp), dimension(3), intent(inout) u2, real(dp), dimension(3), intent(inout) u3, real(dp), intent(inout) d1, real(dp), intent(inout) d2, real(dp), intent(inout) d3)"

.PP
Shift switch variable\&. 
.PP
\fBParameters\fP
.RS 4
\fIu1\fP real variable to be shifted 
.br
\fIu2\fP real variable to be shifted 
.br
\fIu3\fP real variable to be shifted 
.br
\fId1\fP real variable to be shifted 
.br
\fId2\fP real variable to be shifted 
.br
\fId3\fP real variable to be shifted 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 747 of file pmat4\&.f90\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for grid_tools from the source code\&.
