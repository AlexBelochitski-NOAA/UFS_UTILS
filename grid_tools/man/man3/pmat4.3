.TH "pmat4" 3 "Thu Mar 11 2021" "Version 1.0.0" "grid_tools" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pmat4 \- Module for handy vector and matrix operations in Euclidean geometry\&.  

.SH SYNOPSIS
.br
.PP
.SS "Data Types"

.in +1c
.ti -1c
.RI "interface \fBabsv\fP"
.br
.ti -1c
.RI "interface \fBaxial\fP"
.br
.ti -1c
.RI "interface \fBaxtoq\fP"
.br
.ti -1c
.RI "interface \fBaxtorot\fP"
.br
.ti -1c
.RI "interface \fBcorral\fP"
.br
.ti -1c
.RI "interface \fBcross_product\fP"
.br
.ti -1c
.RI "interface \fBctoz\fP"
.br
.ti -1c
.RI "interface \fBdet\fP"
.br
.ti -1c
.RI "interface \fBdiag\fP"
.br
.ti -1c
.RI "interface \fBdlltoxy\fP"
.br
.ti -1c
.RI "interface \fBexpmat\fP"
.br
.ti -1c
.RI "interface \fBgram\fP"
.br
.ti -1c
.RI "interface \fBhav\fP"
.br
.ti -1c
.RI "interface \fBhuarea\fP"
.br
.ti -1c
.RI "interface \fBidentity\fP"
.br
.ti -1c
.RI "interface \fBmobius\fP"
.br
.ti -1c
.RI "interface \fBmobiusi\fP"
.br
.ti -1c
.RI "interface \fBmulqq\fP"
.br
.ti -1c
.RI "interface \fBnormalize\fP"
.br
.ti -1c
.RI "interface \fBnormalized\fP"
.br
.ti -1c
.RI "interface \fBorthogonalized\fP"
.br
.ti -1c
.RI "interface \fBouter_product\fP"
.br
.ti -1c
.RI "interface \fBqtoax\fP"
.br
.ti -1c
.RI "interface \fBqtorot\fP"
.br
.ti -1c
.RI "interface \fBqtospin\fP"
.br
.ti -1c
.RI "interface \fBrottoax\fP"
.br
.ti -1c
.RI "interface \fBrottoq\fP"
.br
.ti -1c
.RI "interface \fBrowops\fP"
.br
.ti -1c
.RI "interface \fBsarea\fP"
.br
.ti -1c
.RI "interface \fBsetem\fP"
.br
.ti -1c
.RI "interface \fBsetmobius\fP"
.br
.ti -1c
.RI "interface \fBspintoq\fP"
.br
.ti -1c
.RI "interface \fBtrace\fP"
.br
.ti -1c
.RI "interface \fBtriple_product\fP"
.br
.ti -1c
.RI "interface \fBznfun\fP"
.br
.ti -1c
.RI "interface \fBzntay\fP"
.br
.ti -1c
.RI "interface \fBztoc\fP"
.br
.in -1c
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "real(dp) function \fBabsv_d\fP (a)"
.br
.RI "Doing sqrt calculation for absv_d function\&. "
.ti -1c
.RI "real(sp) function \fBabsv_s\fP (a)"
.br
.RI "Doing sqrt calculation for absv_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(3) \fBaxial33_d\fP (b)"
.br
.RI "Calculation for axial33_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(3) \fBaxial33_s\fP (b)"
.br
.RI "Calculation for axial33_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(3, 3) \fBaxial3_d\fP (a)"
.br
.RI "Calculation for axial3_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(3, 3) \fBaxial3_s\fP (a)"
.br
.RI "Calculation for axial3_s function\&. "
.ti -1c
.RI "subroutine, public \fBaxtoq\fP (v, q)"
.br
.RI "Go from an axial 3-vector to its equivalent quaternion\&. "
.ti -1c
.RI "subroutine, public \fBaxtorot\fP (ax3, orth33)"
.br
.RI "Construct the 3*3 orthogonal matrix, orth33, that corresponds to the proper rotation encoded by the 3-vector, ax3\&. "
.ti -1c
.RI "subroutine \fBcmobius\fP (aa, bb, cc, dd, vz, vw)"
.br
.RI "Perform a complex Mobius transformation from cartesian vz to cartesian vw where the transformation coefficients are the standard aa,bb,cc,dd\&. "
.ti -1c
.RI "subroutine, public \fBcorral\fP (m, n, mask, a, d, aa, e)"
.br
.RI "Find positive diagonals D and E and a Lagrange multiplier F that minimize the row-sum +column-sum of masked terms, (D_i +log(|A_ij|) +E_j)^2 subject to the single constraint, sum_j E_j =0, where the mask permits only nonnegligible A_ij to participate in the quadratic quantities\&. "
.ti -1c
.RI "real(dp) function, dimension(3) \fBcross_product_d\fP (a, b)"
.br
.RI "Doing calculation for cross_product_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(3) \fBcross_product_s\fP (a, b)"
.br
.RI "Doing calculation for cross_product_s function\&. "
.ti -1c
.RI "subroutine, public \fBctoz\fP (v, z, infz)"
.br
.RI "Utility code for various Mobius transformations\&. "
.ti -1c
.RI "real(dp) function \fBdet_d\fP (a)"
.br
.RI "Calculation for det_d function\&. "
.ti -1c
.RI "integer(spi) function \fBdet_i\fP (a)"
.br
.RI "Calculation for det_i function\&. "
.ti -1c
.RI "integer(dpi) function \fBdet_id\fP (a)"
.br
.RI "Calculation for det_id function\&. "
.ti -1c
.RI "real(sp) function \fBdet_s\fP (a)"
.br
.RI "Calculation for det_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(size(a), size(a)) \fBdiagn_d\fP (a)"
.br
.RI "Calculation for diagn_d function\&. "
.ti -1c
.RI "integer(spi) function, dimension(size(a), size(a)) \fBdiagn_i\fP (a)"
.br
.RI "Calculation for diagn_i function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(a), size(a)) \fBdiagn_s\fP (a)"
.br
.RI "Calculation for diagn_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(size(b, 1)) \fBdiagnn_d\fP (b)"
.br
.RI "Calculation for diagnn_d function\&. "
.ti -1c
.RI "integer(spi) function, dimension(size(b, 1)) \fBdiagnn_i\fP (b)"
.br
.RI "Calculation for diagnn_i function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(b, 1)) \fBdiagnn_s\fP (b)"
.br
.RI "Calculation for diagnn_s function\&. "
.ti -1c
.RI "subroutine \fBdlltoxy_d\fP (rlat, drlat, drlon, x2)"
.br
.RI "Calculate dlltoxy_d\&. "
.ti -1c
.RI "subroutine \fBdlltoxy_s\fP (rlat, drlat, drlon, x2)"
.br
.RI "Calculate dlltoxy_s\&. "
.ti -1c
.RI "real(dp) function \fBdqarea_d\fP (rlat, drlata, drlona, drlatb, drlonb, drlatc, drlonc)"
.br
.RI "Compute the area using dqarea_d\&. "
.ti -1c
.RI "real(sp) function \fBdqarea_s\fP (rlat, drlata, drlona, drlatb, drlonb, drlatc, drlonc)"
.br
.RI "Compute the area of the spherical quadrilateral with a vertex at latitude rlat, and three other vertices at A, B, and C inturn, whose incremented latitudes and longitudes are drlata,drlona (for A), drlatb,drlonb (for B), and drlatc,drlonc (for C)\&. "
.ti -1c
.RI "real(dp) function \fBdtarea_d\fP (rlat, drlata, drlona, drlatb, drlonb)"
.br
.RI "Compute the area with dtarea_d\&. "
.ti -1c
.RI "real(sp) function \fBdtarea_s\fP (rlat, drlata, drlona, drlatb, drlonb)"
.br
.RI "Compute the area of the spherical triangle with a vertex at latitude rlat, and two other vertices, A and B, whose incremented latitudes and longitudes are drlata,drlona (for A) and drlatb,drlonb (for B)\&. "
.ti -1c
.RI "subroutine, public \fBexpmat\fP (n, a, b, detb)"
.br
.RI "Evaluate the exponential, b, of a matrix, a, of degree n\&. "
.ti -1c
.RI "subroutine \fBexpmatd\fP (n, a, b, bd, detb, detbd)"
.br
.RI "Like expmat, but for the 1st derivatives also\&. "
.ti -1c
.RI "subroutine \fBexpmatdd\fP (n, a, b, bd, bdd, detb, detbd, detbdd)"
.br
.RI "Like expmat, but for the 1st and 2nd derivatives also\&. "
.ti -1c
.RI "subroutine \fBgram_d\fP (as, b, nrank, \fBdet\fP)"
.br
.RI "??? "
.ti -1c
.RI "subroutine \fBgram_s\fP (as, b, nrank, \fBdet\fP)"
.br
.RI "??? "
.ti -1c
.RI "subroutine \fBgraml_d\fP (as, b, nrank, detsign, ldet)"
.br
.RI "A version of gram_d where the determinant information is returned in logarithmic form (to avoid overflows for large matrices)\&. "
.ti -1c
.RI "real(dp) function \fBhav_d\fP (t)"
.br
.RI "Doing hav_d function\&. "
.ti -1c
.RI "real(sp) function \fBhav_s\fP (t)"
.br
.RI "Haversine function\&. "
.ti -1c
.RI "real(dp) function \fBhuarea_d\fP (sa, sb)"
.br
.RI "Calculation for huarea_d function\&. "
.ti -1c
.RI "real(sp) function \fBhuarea_s\fP (sa, sb)"
.br
.RI "Spherical area of right-angle triangle whose orthogonal sides have orthographic projection dimensions, sa and sb\&. "
.ti -1c
.RI "integer(spi) function, dimension(3, 3) \fBidentity3_i\fP ()"
.br
.RI "Calculation for identity3_i function\&. "
.ti -1c
.RI "integer(spi) function, dimension(n, n) \fBidentity_i\fP (n)"
.br
.RI "Calculation for identity_i function\&. "
.ti -1c
.RI "real(dp) function, dimension(0:3), public \fBmulqq\fP (a, b)"
.br
.RI "Multiply quaternions, a*b, assuming operation performed from right to left\&. "
.ti -1c
.RI "subroutine \fBnormalize_d\fP (v)"
.br
.RI "Doing normalize_d calculation for given vector\&. "
.ti -1c
.RI "subroutine \fBnormalize_s\fP (v)"
.br
.RI "Normalize the given vector\&. "
.ti -1c
.RI "real(dp) function, dimension(size(a)) \fBnormalized_d\fP (a)"
.br
.RI "Doing calculation for normalized_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(a)) \fBnormalized_s\fP (a)"
.br
.RI "Doing calculation for normalized_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(size(u)) \fBorthogonalized_d\fP (u, a)"
.br
.RI "Doing calculation for orthogonalized_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(u)) \fBorthogonalized_s\fP (u, a)"
.br
.RI "Doing calculation for orthogonalized_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(size(a), size(b)) \fBouter_product_d\fP (a, b)"
.br
.RI "Calculation for outer_product_d function\&. "
.ti -1c
.RI "integer(spi) function, dimension(size(a), size(b)) \fBouter_product_i\fP (a, b)"
.br
.RI "Calculation for outer_product_i function\&. "
.ti -1c
.RI "real(sp) function, dimension(size(a), size(b)) \fBouter_product_s\fP (a, b)"
.br
.RI "Doing calculation for outer_product_s function\&. "
.ti -1c
.RI "subroutine \fBplaingram_d\fP (b, nrank)"
.br
.RI "A 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. "
.ti -1c
.RI "subroutine \fBplaingram_s\fP (b, nrank)"
.br
.RI "A 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. "
.ti -1c
.RI "subroutine, public \fBqtoax\fP (q, v)"
.br
.RI "Go from quaternion to axial 3-vector\&. "
.ti -1c
.RI "subroutine, public \fBqtorot\fP (q, rot)"
.br
.RI "Go from quaternion to rotation matrix representations\&. "
.ti -1c
.RI "subroutine, public \fBqtospin\fP (q, cspin)"
.br
.RI "Go from the quaternion to the spinor representation\&. "
.ti -1c
.RI "subroutine, public \fBrottoax\fP (orth33, ax3)"
.br
.RI "Assuming that given orth33 is a 3*3 proper rotation matrix, derive an axial 3-vector, ax3, such that orth33 is implied by ax3 when the latter is interpreted as encoding a rotation (as in subroutine axtorot)\&. "
.ti -1c
.RI "subroutine, public \fBrottoq\fP (rot, q)"
.br
.RI "Go from rotation matrix to quaternion representation\&. "
.ti -1c
.RI "subroutine \fBrowgram\fP (m, n, a, ipiv, tt, b, rank)"
.br
.RI "Without changing (tall) rectangular input matrix a, perform pivoted gram- Schmidt operations to orthogonalize the rows, until rows that remain become negligible\&. "
.ti -1c
.RI "subroutine, public \fBrowops\fP (m, n, ipiv, tt, v, vv)"
.br
.RI "Apply the row-operations, implied by ipiv and tt returned by rowgram, to the single column vector, v, to produce the transformed vector vv\&. "
.ti -1c
.RI "real(dp) function \fBsarea_d\fP (v1, v2, v3)"
.br
.RI "Compute the area of sarea_d, {v1,v2,v3}\&. "
.ti -1c
.RI "real(sp) function \fBsarea_s\fP (v1, v2, v3)"
.br
.RI "Compute the area of the spherical triangle, {v1,v2,v3}, measured in the right-handed sense, by dropping a perpendicular to u0 on the longest side so that the area becomes the sum of areas of the two simpler right-angled triangles\&. "
.ti -1c
.RI "subroutine \fBsetem\fP (c, d, e, g, r)"
.br
.RI "??? "
.ti -1c
.RI "subroutine, public \fBsetmobius\fP (xc0, xc1, xc2, aa, bb, cc, dd)"
.br
.RI "Find the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, for a standard (north-)polar stereographic transformation that takes cartesian point, xc0 to the north pole, xc1 to (lat=0,lon=0), xc2 to the south pole (=complex infinity)\&. "
.ti -1c
.RI "subroutine, public \fBspintoq\fP (cspin, q)"
.br
.RI "Go from the spinor to the quaternion representation\&. "
.ti -1c
.RI "real(dp) function \fBtrace_d\fP (b)"
.br
.RI "Calculation for trace_d function\&. "
.ti -1c
.RI "integer(spi) function \fBtrace_i\fP (b)"
.br
.RI "Calculation for trace_i function\&. "
.ti -1c
.RI "real(sp) function \fBtrace_s\fP (b)"
.br
.RI "Calculation for trace_s function\&. "
.ti -1c
.RI "real(dp) function, dimension(4) \fBtriple_cross_product_d\fP (u, v, w)"
.br
.RI "Doing calculation for triple_cross_product_d function\&. "
.ti -1c
.RI "real(sp) function, dimension(4) \fBtriple_cross_product_s\fP (u, v, w)"
.br
.RI "Deliver the triple-cross-product, x, of the three 4-vectors, u, v, w, with the sign convention that ordered, {u,v,w,x} form a right-handed quartet in the generic case (determinant >= 0)\&. "
.ti -1c
.RI "real(dp) function \fBtriple_product_d\fP (a, b, c)"
.br
.RI "Calculation for triple_product_d function\&. "
.ti -1c
.RI "real(sp) function \fBtriple_product_s\fP (a, b, c)"
.br
.RI "Calculation for triple_product_s function\&. "
.ti -1c
.RI "subroutine \fBzmobius\fP (aa, bb, cc, dd, z, infz, w, infw)"
.br
.RI "Perform a complex Mobius transformation from (z,infz) to (w,infw) where the transformation coefficients are the standard aa,bb,cc,dd\&. "
.ti -1c
.RI "subroutine \fBzmobiusi\fP (aa, bb, cc, dd, zz, infz, zw, infw)"
.br
.RI "Perform the inverse of the mobius transformation with coefficients, {aa,bb,cc,dd}\&. "
.ti -1c
.RI "subroutine, public \fBznfun\fP (n, z, zn, znd, zndd, znddd)"
.br
.RI "??? "
.ti -1c
.RI "subroutine, public \fBzntay\fP (n, z, zn)"
.br
.RI "??? "
.ti -1c
.RI "subroutine \fBzsetmobius\fP (z0, infz0, z1, infz1, z2, infz2, aa, bb, cc, dd)"
.br
.RI "Find the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, that takes polar stereographic point, z0 to the north pole, z1 to (lat=0,lon=0), z2 to the south pole (=complex infinity)\&. "
.ti -1c
.RI "subroutine, public \fBztoc\fP (z, infz, v)"
.br
.RI "??? "
.ti -1c
.RI "subroutine \fBztocd\fP (z, infz, v, vd)"
.br
.RI "The convention adopted for the complex derivative is that, for a complex infinitesimal map displacement, delta_z, the corresponding infinitesimal change of cartesian vector position is delta_v given by: delta_v = Real(vd*delta_z)\&. "
.in -1c
.SH "Detailed Description"
.PP 
Module for handy vector and matrix operations in Euclidean geometry\&. 

Package for handy vector and matrix operations in Euclidean geometry\&. This package is primarily intended for 3D operations and three of the functions (Cross_product, Triple_product and Axial) do not possess simple generalizations to a generic number N of dimensions\&. The others, while admitting such N-dimensional generalizations, have not all been provided with such generic forms here at the time of writing, though some of these may be added at a future date\&.
.PP
May 2017: Added routines to facilitate manipulation of 3D rotations, their representations by axial vectors, and routines to compute the exponentials of matrices (without resort to eigen methods)\&. Also added Quaternion and spinor representations of 3D rotations, and their conversion routines\&. FUNCTION:
.IP "\(bu" 2
absv: Absolute magnitude of vector as its euclidean length
.IP "\(bu" 2
Normalized: Normalized version of given real vector
.IP "\(bu" 2
Orthogonalized: Orthogonalized version of second vector rel\&. to first unit v\&.
.IP "\(bu" 2
Cross_product: Vector cross-product of the given 2 vectors
.IP "\(bu" 2
Outer_product: outer-product matrix of the given 2 vectors
.IP "\(bu" 2
Triple_product: Scalar triple product of given 3 vectors
.IP "\(bu" 2
Det: Determinant of given matrix
.IP "\(bu" 2
Axial: Convert axial-vector <--> 2-form (antisymmetric matrix)
.IP "\(bu" 2
Diag: Diagnl of given matrix, or diagonal matrix of given elements
.IP "\(bu" 2
Trace: Trace of given matrix
.IP "\(bu" 2
Identity: Identity 3*3 matrix, or identity n*n matrix for a given n
.IP "\(bu" 2
Sarea: Spherical area subtended by three vectors, or by lat-lon increments forming a triangle or quadrilateral
.IP "\(bu" 2
Huarea: Spherical area subtended by right-angled spherical triangle SUBROUTINE:
.IP "\(bu" 2
Gram: Right-handed orthogonal basis and rank, nrank\&. The first nrank basis vectors span the column range of matrix given, OR ('plain' version) simple unpivoted Gram-Schmidt of a square matrix\&.
.PP
In addition, we include routines that relate to stereographic projections and some associated mobius transformation utilities, since these complex operations have a strong geometrical flavor\&.
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP

.SH "Function/Subroutine Documentation"
.PP 
.SS "real(dp) function pmat4::absv_d (real(dp), dimension(:), intent(in) a)\fC [private]\fP"

.PP
Doing sqrt calculation for absv_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
s result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 132 of file pmat4\&.f90\&.
.PP
Referenced by normalized_d()\&.
.SS "real(sp) function pmat4::absv_s (real(sp), dimension(:), intent(in) a)\fC [private]\fP"

.PP
Doing sqrt calculation for absv_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
s result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 120 of file pmat4\&.f90\&.
.PP
Referenced by normalized_s()\&.
.SS "real(dp) function, dimension(3) pmat4::axial33_d (real(dp), dimension(3,3), intent(in) b)"

.PP
Calculation for axial33_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 459 of file pmat4\&.f90\&.
.PP
References pietc::o2\&.
.SS "real(sp) function, dimension(3) pmat4::axial33_s (real(sp), dimension(3,3), intent(in) b)"

.PP
Calculation for axial33_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 446 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(3,3) pmat4::axial3_d (real(dp), dimension(3), intent(in) a)"

.PP
Calculation for axial3_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 433 of file pmat4\&.f90\&.
.PP
References pietc::u0\&.
.SS "real(sp) function, dimension(3,3) pmat4::axial3_s (real(sp), dimension(3), intent(in) a)"

.PP
Calculation for axial3_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 420 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::axtoq\fP (real(dp), dimension(3), intent(in) v, real(dp), dimension(0:3), intent(out) q)"

.PP
Go from an axial 3-vector to its equivalent quaternion\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP axial 3-vector 
.br
\fIq\fP quaternion 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1613 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::axtorot\fP (real(dp), dimension(3), intent(in) ax3, real(dp), dimension(3,3), intent(out) orth33)"

.PP
Construct the 3*3 orthogonal matrix, orth33, that corresponds to the proper rotation encoded by the 3-vector, ax3\&. The antisymmetric matrix ax33 equivalent to the axial vector ax3 is exponentiated to obtain orth33\&.
.PP
\fBParameters\fP
.RS 4
\fIax3\fP axial 3-vector 
.br
\fIorth33\fP 3*3 orthogonal matrix 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1503 of file pmat4\&.f90\&.
.SS "subroutine pmat4::cmobius (complex(dpc), intent(in) aa, complex(dpc), intent(in) bb, complex(dpc), intent(in) cc, complex(dpc), intent(in) dd, real(dp), dimension(3), intent(in) vz, real(dp), dimension(3), intent(out) vw)\fC [private]\fP"

.PP
Perform a complex Mobius transformation from cartesian vz to cartesian vw where the transformation coefficients are the standard aa,bb,cc,dd\&. 
.PP
\fBParameters\fP
.RS 4
\fIaa\fP Mobius transformation coefficients 
.br
\fIbb\fP Mobius transformation coefficients 
.br
\fIcc\fP Mobius transformation coefficients 
.br
\fIdd\fP Mobius transformation coefficients 
.br
\fIvz\fP Cartesian vaule 
.br
\fIvw\fP Cartesian vaule 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2258 of file pmat4\&.f90\&.
.PP
References zmobius()\&.
.SS "subroutine, public \fBpmat4::corral\fP (integer(spi), intent(in) m, integer(spi), intent(in) n, logical, dimension(m,n), intent(in) mask, real(dp), dimension(m,n), intent(in) a, real(dp), dimension(m  ), intent(out) d, real(dp), dimension(m,n), intent(out) aa, real(dp), dimension(  n), intent(out) e)"

.PP
Find positive diagonals D and E and a Lagrange multiplier F that minimize the row-sum +column-sum of masked terms, (D_i +log(|A_ij|) +E_j)^2 subject to the single constraint, sum_j E_j =0, where the mask permits only nonnegligible A_ij to participate in the quadratic quantities\&. Once a solution for D and E is found, return their exponentials, d and e, together with the rescaled matrix aa such that a = d\&.aa\&.e when d and e are interpreted as diagonal matrices\&.
.PP
\fBParameters\fP
.RS 4
\fIm\fP ??? 
.br
\fIn\fP ??? 
.br
\fImask\fP ??? 
.br
\fIa\fP positive diagonals 
.br
\fId\fP positive diagonals 
.br
\fIaa\fP ??? 
.br
\fIe\fP positive diagonals 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.br
 
.RE
.PP

.PP
Definition at line 1396 of file pmat4\&.f90\&.
.PP
References pietc::u0, and pietc::u1\&.
.SS "real(dp) function, dimension(3) pmat4::cross_product_d (real(dp), dimension(3), intent(in) a, real(dp), dimension(3), intent(in) b)\fC [private]\fP"

.PP
Doing calculation for cross_product_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.br
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
c result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 216 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(3) pmat4::cross_product_s (real(sp), dimension(3), intent(in) a, real(sp), dimension(3), intent(in) b)\fC [private]\fP"

.PP
Doing calculation for cross_product_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.br
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
c result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 203 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::ctoz\fP (real(dp), dimension(3), intent(in) v, complex(dpc), intent(out) z, logical, intent(out) infz)"

.PP
Utility code for various Mobius transformations\&. If aa1,bb1,cc1,dd1 are the coefficients for one transformation, and aa2,bb2,cc2,dd2 are the coefficients for a second one, then the coefficients for the mapping of a test point, zz, by aa1 etc to zw, followed by a mapping of zw, by aa2 etc to zv, is equivalent to a single mapping zz-->zv by the transformatn with coefficients aa3,bb3,cc3,dd3, such that, as 2*2 complex matrices:
.PP
.PP
.nf

 [ aa3, bb3 ]   [ aa2, bb2 ]   [ aa1, bb1 ]
 [          ] = [          ] * [          ]
 [ cc3, dd3 ]   [ cc2, dd2 ]   [ cc1, dd1 ] \&.
 
.fi
.PP
.PP
Note that the determinant of these matrices is always +1\&.
.PP
\fBParameters\fP
.RS 4
\fIv\fP matric 
.br
\fIz\fP ??? 
.br
\fIinfz\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1974 of file pmat4\&.f90\&.
.PP
References pkind::dpc, pietc::u0, and pietc::u1\&.
.SS "real(dp) function pmat4::det_d (real(dp), dimension(:,:), intent(in) a)"

.PP
Calculation for det_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
det result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 370 of file pmat4\&.f90\&.
.PP
References pietc::u0\&.
.SS "integer(spi) function pmat4::det_i (integer(spi), dimension(:,:), intent(in) a)"

.PP
Calculation for det_i function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
idet result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 391 of file pmat4\&.f90\&.
.SS "integer(dpi) function pmat4::det_id (integer(dpi), dimension(:,:), intent(in) a)\fC [private]\fP"

.PP
Calculation for det_id function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
idet result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 405 of file pmat4\&.f90\&.
.PP
References pkind::dp, and pkind::dpi\&.
.SS "real(sp) function pmat4::det_s (real(sp), dimension(:,:), intent(in) a)\fC [private]\fP"

.PP
Calculation for det_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
det result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 349 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(size(a),size(a)) pmat4::diagn_d (real(dp), dimension(:), intent(in) a)"

.PP
Calculation for diagn_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 487 of file pmat4\&.f90\&.
.PP
References pietc::u0\&.
.SS "integer(spi) function, dimension(size(a),size(a)) pmat4::diagn_i (integer(spi), dimension(:), intent(in) a)"

.PP
Calculation for diagn_i function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 502 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(size(a),size(a)) pmat4::diagn_s (real(sp), dimension(:), intent(in) a)"

.PP
Calculation for diagn_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 472 of file pmat4\&.f90\&.
.PP
References pietc::u0\&.
.SS "real(dp) function, dimension(size(b,1)) pmat4::diagnn_d (real(dp), dimension(:,:), intent(in) b)\fC [private]\fP"

.PP
Calculation for diagnn_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 530 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(size(b,1)) pmat4::diagnn_i (integer(spi), dimension(:,:), intent(in) b)\fC [private]\fP"

.PP
Calculation for diagnn_i function\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP integer type input value 
.RE
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 544 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(size(b,1)) pmat4::diagnn_s (real(sp), dimension(:,:), intent(in) b)\fC [private]\fP"

.PP
Calculation for diagnn_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 516 of file pmat4\&.f90\&.
.SS "subroutine pmat4::dlltoxy_d (real(dp), intent(in) rlat, real(dp), intent(in) drlat, real(dp), intent(in) drlon, real(dp), dimension(2), intent(out) x2)"

.PP
Calculate dlltoxy_d\&. 
.PP
\fBParameters\fP
.RS 4
\fIrlat\fP latitude 
.br
\fIdrlat\fP latitude 
.br
\fIdrlon\fP longitudes 
.br
\fIx2\fP output 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 901 of file pmat4\&.f90\&.
.PP
References pietc::u2\&.
.SS "subroutine pmat4::dlltoxy_s (real(sp), intent(in) rlat, real(sp), intent(in) drlat, real(sp), intent(in) drlon, real(sp), dimension(2), intent(out) x2)\fC [private]\fP"

.PP
Calculate dlltoxy_s\&. 
.PP
\fBParameters\fP
.RS 4
\fIrlat\fP latitude 
.br
\fIdrlat\fP latitude 
.br
\fIdrlon\fP longitudes 
.br
\fIx2\fP output 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 884 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::dqarea_d (real(dp), intent(in) rlat, real(dp), intent(in) drlata, real(dp), intent(in) drlona, real(dp), intent(in) drlatb, real(dp), intent(in) drlonb, real(dp), intent(in) drlatc, real(dp), intent(in) drlonc)\fC [private]\fP"

.PP
Compute the area using dqarea_d\&. 
.PP
\fBParameters\fP
.RS 4
\fIrlat\fP latitude 
.br
\fIdrlata\fP latitudes 
.br
\fIdrlona\fP longitudes 
.br
\fIdrlatb\fP latitudes 
.br
\fIdrlonb\fP longitudes 
.br
\fIdrlatc\fP latitudes 
.br
\fIdrlonc\fP longitudes 
.RE
.PP
\fBReturns\fP
.RS 4
area 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 869 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::dqarea_s (real(sp), intent(in) rlat, real(sp), intent(in) drlata, real(sp), intent(in) drlona, real(sp), intent(in) drlatb, real(sp), intent(in) drlonb, real(sp), intent(in) drlatc, real(sp), intent(in) drlonc)"

.PP
Compute the area of the spherical quadrilateral with a vertex at latitude rlat, and three other vertices at A, B, and C inturn, whose incremented latitudes and longitudes are drlata,drlona (for A), drlatb,drlonb (for B), and drlatc,drlonc (for C)\&. The computations are designed to give a proportionately accurate area estimate even when the quadrilateral is very small, provided the diagonal making the B-increment is not disproportionately small compared to the characteristic size of the quadrilateral\&.
.PP
\fBParameters\fP
.RS 4
\fIrlat\fP latitude 
.br
\fIdrlata\fP latitudes 
.br
\fIdrlona\fP longitudes 
.br
\fIdrlatb\fP latitudes 
.br
\fIdrlonb\fP longitudes 
.br
\fIdrlatc\fP latitudes 
.br
\fIdrlonc\fP longitudes 
.RE
.PP
\fBReturns\fP
.RS 4
area result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 849 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::dtarea_d (real(dp), intent(in) rlat, real(dp), intent(in) drlata, real(dp), intent(in) drlona, real(dp), intent(in) drlatb, real(dp), intent(in) drlonb)"

.PP
Compute the area with dtarea_d\&. 
.PP
\fBParameters\fP
.RS 4
\fIrlat\fP latitude 
.br
\fIdrlata\fP latitudes 
.br
\fIdrlona\fP longitudes 
.br
\fIdrlatb\fP latitudes 
.br
\fIdrlonb\fP longitudes 
.RE
.PP
\fBReturns\fP
.RS 4
area result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 806 of file pmat4\&.f90\&.
.PP
References pietc::u0, and pietc::u1\&.
.SS "real(sp) function pmat4::dtarea_s (real(sp), intent(in) rlat, real(sp), intent(in) drlata, real(sp), intent(in) drlona, real(sp), intent(in) drlatb, real(sp), intent(in) drlonb)\fC [private]\fP"

.PP
Compute the area of the spherical triangle with a vertex at latitude rlat, and two other vertices, A and B, whose incremented latitudes and longitudes are drlata,drlona (for A) and drlatb,drlonb (for B)\&. The computations are designed to give a proportionately accurate area estimate even when the triangle is very small, provided the B-increment is not disproportionately small compared to the other two sides\&.
.PP
\fBParameters\fP
.RS 4
\fIrlat\fP latitude 
.br
\fIdrlata\fP latitudes 
.br
\fIdrlona\fP longitudes 
.br
\fIdrlatb\fP latitudes 
.br
\fIdrlonb\fP longitudes 
.RE
.PP
\fBReturns\fP
.RS 4
area result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 773 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::expmat\fP (integer(spi), intent(in) n, real(dp), dimension(n,n), intent(in) a, real(dp), dimension(n,n), intent(out) b, real(dp), intent(out) detb)"

.PP
Evaluate the exponential, b, of a matrix, a, of degree n\&. Apply the iterated squaring method, m times, to the approximation to exp(a/(2**m)) obtained as a Taylor expansion of degree L See Fung, T\&. C\&., 2004, Int\&. J\&. Numer\&. Meth\&. Engng, 59, 1273--1286\&.
.PP
\fBParameters\fP
.RS 4
\fIn\fP degree 
.br
\fIa\fP matrix 
.br
\fIb\fP exponential matrix of a 
.br
\fIdetb\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1683 of file pmat4\&.f90\&.
.PP
References pietc::o2, pietc::u0, pietc::u1, and pietc::u2\&.
.SS "subroutine pmat4::expmatd (integer(spi), intent(in) n, real(dp), dimension(n,n), intent(in) a, real(dp), dimension(n,n), intent(out) b, real(dp), dimension(n,n,(n*(n+1))/2), intent(out) bd, real(dp), intent(out) detb, real(dp), dimension((n*(n+1))/2), intent(out) detbd)"

.PP
Like expmat, but for the 1st derivatives also\&. 
.PP
\fBParameters\fP
.RS 4
\fIn\fP degree 
.br
\fIa\fP matrix 
.br
\fIb\fP exponential matrix of a 
.br
\fIbd\fP ??? 
.br
\fIdetb\fP ??? 
.br
\fIdetbd\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1721 of file pmat4\&.f90\&.
.PP
References pietc::o2, pietc::u0, pietc::u1, and pietc::u2\&.
.SS "subroutine pmat4::expmatdd (integer(spi), intent(in) n, real(dp), dimension(n,n), intent(in) a, real(dp), dimension(n,n), intent(out) b, real(dp), dimension(n,n,(n*(n+1))/2), intent(out) bd, real(dp), dimension(n,n,(n*(n+1))/2,(n*(n+1))/2), intent(out) bdd, real(dp), intent(out) detb, real(dp), dimension((n*(n+1))/2), intent(out) detbd, real(dp), dimension((n*(n+1))/2,(n*(n+1))/2), intent(out) detbdd)"

.PP
Like expmat, but for the 1st and 2nd derivatives also\&. 
.PP
\fBParameters\fP
.RS 4
\fIn\fP degree 
.br
\fIa\fP matrix 
.br
\fIb\fP exponential matrix of a 
.br
\fIbd\fP ??? 
.br
\fIbdd\fP ??? 
.br
\fIdetb\fP ??? 
.br
\fIdetbd\fP ??? 
.br
\fIdetbdd\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1788 of file pmat4\&.f90\&.
.PP
References pietc::o2, pietc::u0, pietc::u1, and pietc::u2\&.
.SS "subroutine pmat4::gram_d (real(dp), dimension(:,:), intent(in) as, real(dp), dimension(:,:), intent(out) b, integer(spi), intent(out) nrank, real(dp), intent(out) det)"

.PP
??? 
.PP
\fBParameters\fP
.RS 4
\fIas\fP ??? 
.br
\fIb\fP ??? 
.br
\fInrank\fP ??? 
.br
\fIdet\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.br
 
.RE
.PP

.PP
Definition at line 1035 of file pmat4\&.f90\&.
.PP
References pietc::u0, and pietc::u1\&.
.SS "subroutine pmat4::gram_s (real(sp), dimension(:,:), intent(in) as, real(sp), dimension(:,:), intent(out) b, integer(spi), intent(out) nrank, real(sp), intent(out) det)"

.PP
??? 
.PP
\fBParameters\fP
.RS 4
\fIas\fP ??? 
.br
\fIb\fP ??? 
.br
\fInrank\fP ??? 
.br
\fIdet\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 968 of file pmat4\&.f90\&.
.SS "subroutine pmat4::graml_d (real(dp), dimension(:,:), intent(in) as, real(dp), dimension(:,:), intent(out) b, integer(spi), intent(out) nrank, integer(spi), intent(out) detsign, real(dp), intent(out) ldet)"

.PP
A version of gram_d where the determinant information is returned in logarithmic form (to avoid overflows for large matrices)\&. When the matrix is singular, the 'sign' of the determinant, detsign, is returned as zero (instead of either +1 or -1) and ldet is then just the log of the nonzero factors found by the process\&.
.PP
\fBParameters\fP
.RS 4
\fIas\fP ??? 
.br
\fIb\fP ??? 
.br
\fInrank\fP ??? 
.br
\fIdetsign\fP singular determinant 
.br
\fIldet\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1107 of file pmat4\&.f90\&.
.PP
References pietc::u0\&.
.SS "real(dp) function pmat4::hav_d (real(dp), intent(in) t)"

.PP
Doing hav_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIt\fP input 
.RE
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 929 of file pmat4\&.f90\&.
.PP
References pietc::o2\&.
.SS "real(sp) function pmat4::hav_s (real(sp), intent(in) t)"

.PP
Haversine function\&. 
.PP
\fBParameters\fP
.RS 4
\fIt\fP input 
.RE
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 916 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::huarea_d (real(dp), intent(in) sa, real(dp), intent(in) sb)\fC [private]\fP"

.PP
Calculation for huarea_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIsa\fP ??? 
.br
\fIsb\fP ??? 
.RE
.PP
\fBReturns\fP
.RS 4
area 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 636 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::huarea_s (real(sp), intent(in) sa, real(sp), intent(in) sb)\fC [private]\fP"

.PP
Spherical area of right-angle triangle whose orthogonal sides have orthographic projection dimensions, sa and sb\&. 
.PP
\fBParameters\fP
.RS 4
\fIsa\fP ??? 
.br
\fIsb\fP ??? 
.RE
.PP
\fBReturns\fP
.RS 4
area 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 620 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(3,3) pmat4::identity3_i\fC [private]\fP"

.PP
Calculation for identity3_i function\&. 
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 606 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(n,n) pmat4::identity_i (integer(spi), intent(in) n)\fC [private]\fP"

.PP
Calculation for identity_i function\&. 
.PP
\fBParameters\fP
.RS 4
\fIn\fP input value 
.RE
.PP
\fBReturns\fP
.RS 4
a result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 594 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(0:3), public \fBpmat4::mulqq\fP (real(dp), dimension(0:3), intent(in) a, real(dp), dimension(0:3), intent(in) b)"

.PP
Multiply quaternions, a*b, assuming operation performed from right to left\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real quaternion 
.br
\fIb\fP real quaternion 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP
\fBReturns\fP
.RS 4
c 
.RE
.PP

.PP
Definition at line 1663 of file pmat4\&.f90\&.
.SS "subroutine pmat4::normalize_d (real(dp), dimension(:), intent(inout) v)"

.PP
Doing normalize_d calculation for given vector\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP vector 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 953 of file pmat4\&.f90\&.
.PP
References pietc::u0, and pietc::u1\&.
.SS "subroutine pmat4::normalize_s (real(sp), dimension(:), intent(inout) v)"

.PP
Normalize the given vector\&. 
.PP
\fBParameters\fP
.RS 4
\fIv\fP vector 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 941 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(size(a)) pmat4::normalized_d (real(dp), dimension(:), intent(in) a)"

.PP
Doing calculation for normalized_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 158 of file pmat4\&.f90\&.
.PP
References absv_d(), and pietc::u0\&.
.SS "real(sp) function, dimension(size(a)) pmat4::normalized_s (real(sp), dimension(:), intent(in) a)\fC [private]\fP"

.PP
Doing calculation for normalized_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 144 of file pmat4\&.f90\&.
.PP
References absv_s()\&.
.SS "real(dp) function, dimension(size(u)) pmat4::orthogonalized_d (real(dp), dimension(:), intent(in) u, real(dp), dimension(:), intent(in) a)\fC [private]\fP"

.PP
Doing calculation for orthogonalized_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIu\fP real type input value 
.br
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 188 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(size(u)) pmat4::orthogonalized_s (real(sp), dimension(:), intent(in) u, real(sp), dimension(:), intent(in) a)"

.PP
Doing calculation for orthogonalized_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIu\fP real type input value 
.br
\fIa\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
b result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 173 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(size(a),size(b)) pmat4::outer_product_d (real(dp), dimension(:), intent(in) a, real(dp), dimension(:), intent(in) b)\fC [private]\fP"

.PP
Calculation for outer_product_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.br
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
c result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 290 of file pmat4\&.f90\&.
.SS "integer(spi) function, dimension(size(a),size(b)) pmat4::outer_product_i (integer(spi), dimension(:), intent(in) a, integer(spi), dimension(:), intent(in) b)\fC [private]\fP"

.PP
Calculation for outer_product_i function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP input value 
.br
\fIb\fP input value 
.RE
.PP
\fBReturns\fP
.RS 4
c result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 306 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(size(a),size(b)) pmat4::outer_product_s (real(sp), dimension(:), intent(in) a, real(sp), dimension(:), intent(in) b)\fC [private]\fP"

.PP
Doing calculation for outer_product_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.br
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
c result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 274 of file pmat4\&.f90\&.
.SS "subroutine pmat4::plaingram_d (real(dp), dimension(:,:), intent(inout) b, integer(spi), intent(out) nrank)"

.PP
A 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP matrices 
.br
\fInrank\fP result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1218 of file pmat4\&.f90\&.
.PP
References pietc::u0\&.
.SS "subroutine pmat4::plaingram_s (real(sp), dimension(:,:), intent(inout) b, integer(spi), intent(out) nrank)"

.PP
A 'plain' (unpivoted) version of Gram-Schmidt, for square matrices only\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP matrices 
.br
\fInrank\fP result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1183 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::qtoax\fP (real(dp), dimension(0:3), intent(in) q, real(dp), dimension(3), intent(out) v)"

.PP
Go from quaternion to axial 3-vector\&. 
.PP
\fBParameters\fP
.RS 4
\fIq\fP quaternion 
.br
\fIv\fP axial 3-vector 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1627 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::qtorot\fP (real(dp), dimension(0:3), intent(in) q, real(dp), dimension(3,3), intent(out) rot)"

.PP
Go from quaternion to rotation matrix representations\&. 
.PP
\fBParameters\fP
.RS 4
\fIq\fP quaternion representation 
.br
\fIrot\fP rotation matrix representations 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1601 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::qtospin\fP (real(dp), dimension(0:3), intent(in) q, complex(dpc), dimension(2,2), intent(out) cspin)"

.PP
Go from the quaternion to the spinor representation\&. 
.PP
\fBParameters\fP
.RS 4
\fIq\fP quaternion representation 
.br
\fIcspin\fP spinor representation 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1530 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::rottoax\fP (real(dp), dimension(3,3), intent(in) orth33, real(dp), dimension(3), intent(out) ax3)"

.PP
Assuming that given orth33 is a 3*3 proper rotation matrix, derive an axial 3-vector, ax3, such that orth33 is implied by ax3 when the latter is interpreted as encoding a rotation (as in subroutine axtorot)\&. Note that such ax3 are not unique -- adding any multiple of 2*pi times the parallel unit vector leads to the same orth33\&.
.PP
\fBParameters\fP
.RS 4
\fIorth33\fP 3*3 proper rotation matrix 
.br
\fIax3\fP axial 3-vector 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1473 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::rottoq\fP (real(dp), dimension(3,3), intent(in) rot, real(dp), dimension(0:3), intent(out) q)"

.PP
Go from rotation matrix to quaternion representation\&. 
.PP
\fBParameters\fP
.RS 4
\fIrot\fP rotation matrix 
.br
\fIq\fP quaternion representation 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1545 of file pmat4\&.f90\&.
.PP
References pietc::u0, pietc::u1, and pietc::u2\&.
.SS "subroutine pmat4::rowgram (integer(spi), intent(in) m, integer(spi), intent(in) n, real(dp), dimension(m,n), intent(in) a, integer(spi), dimension(n), intent(out) ipiv, real(dp), dimension(m,n), intent(out) tt, real(dp), dimension(n,n), intent(out) b, integer(spi), intent(out) rank)"

.PP
Without changing (tall) rectangular input matrix a, perform pivoted gram- Schmidt operations to orthogonalize the rows, until rows that remain become negligible\&. Record the pivoting sequence in ipiv, and the row-normalization in tt(j,j) and the row-orthogonalization in tt(i,j), for i>j\&. Note that tt(i,j)=0 for i<j (tt is truncated lower triangular)\&. The orthonormalized rows are returned in square array b, which is complete even when the effective rank < n\&. The recorded row operations can be repeated on independent column vectors through the use of subroutine ROWOPS (in this module)\&. It is recommended to rescale the original matrix A via a call to CORRAL (in this module) because the negligibility criterion depends upon an 'epsilon' value that is fixed (10**(-13)) and assumes elements of a are never too different in magnitude from unity, unless they are actually zero\&.
.PP
\fBParameters\fP
.RS 4
\fIm\fP ??? 
.br
\fIn\fP ??? 
.br
\fIa\fP rectangular input matrix 
.br
\fIipiv\fP pivoting sequence 
.br
\fItt\fP row-normalization 
.br
\fIb\fP orthonormalized rows 
.br
\fIrank\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1270 of file pmat4\&.f90\&.
.PP
References pietc::u0, and pietc::u1\&.
.SS "subroutine, public \fBpmat4::rowops\fP (integer(spi), intent(in) m, integer(spi), intent(in) n, integer(spi), dimension(n), intent(in) ipiv, real(dp), dimension(m,n), intent(in) tt, real(dp), dimension(m), intent(in) v, real(dp), dimension(m), intent(out) vv)"

.PP
Apply the row-operations, implied by ipiv and tt returned by rowgram, to the single column vector, v, to produce the transformed vector vv\&. 
.PP
\fBParameters\fP
.RS 4
\fIm\fP ??? 
.br
\fIn\fP ??? 
.br
\fIipiv\fP ??? 
.br
\fItt\fP ??? 
.br
\fIv\fP vector 
.br
\fIvv\fP vector 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1355 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::sarea_d (real(dp), dimension(3), intent(in) v1, real(dp), dimension(3), intent(in) v2, real(dp), dimension(3), intent(in) v3)\fC [private]\fP"

.PP
Compute the area of sarea_d, {v1,v2,v3}\&. 
.PP
\fBParameters\fP
.RS 4
\fIv1\fP area of the spherical triangle 
.br
\fIv2\fP area of the spherical triangle 
.br
\fIv3\fP area of the spherical triangle 
.RE
.PP
\fBReturns\fP
.RS 4
area result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 711 of file pmat4\&.f90\&.
.PP
References cyclic(), and pietc::u0\&.
.SS "real(sp) function pmat4::sarea_s (real(sp), dimension(3), intent(in) v1, real(sp), dimension(3), intent(in) v2, real(sp), dimension(3), intent(in) v3)\fC [private]\fP"

.PP
Compute the area of the spherical triangle, {v1,v2,v3}, measured in the right-handed sense, by dropping a perpendicular to u0 on the longest side so that the area becomes the sum of areas of the two simpler right-angled triangles\&. 
.PP
\fBParameters\fP
.RS 4
\fIv1\fP area of the spherical triangle 
.br
\fIv2\fP area of the spherical triangle 
.br
\fIv3\fP area of the spherical triangle 
.RE
.PP
\fBReturns\fP
.RS 4
area result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 656 of file pmat4\&.f90\&.
.PP
References cyclic()\&.
.SS "subroutine \fBpmat4::setem\fP (real(dp), intent(in) c, real(dp), intent(in) d, real(dp), intent(in) e, real(dp), intent(in) g, real(dp), dimension(3,3), intent(out) r)\fC [private]\fP"

.PP
??? 
.PP
\fBParameters\fP
.RS 4
\fIc\fP ??? 
.br
\fId\fP ??? 
.br
\fIe\fP ??? 
.br
\fIg\fP ??? 
.br
\fIr\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1644 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::setmobius\fP (real(dp), dimension(3), intent(in) xc0, real(dp), dimension(3), intent(in) xc1, real(dp), dimension(3), intent(in) xc2, complex(dpc), intent(out) aa, complex(dpc), intent(out) bb, complex(dpc), intent(out) cc, complex(dpc), intent(out) dd)"

.PP
Find the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, for a standard (north-)polar stereographic transformation that takes cartesian point, xc0 to the north pole, xc1 to (lat=0,lon=0), xc2 to the south pole (=complex infinity)\&. 
.PP
\fBParameters\fP
.RS 4
\fIxc0\fP cartesian point 
.br
\fIxc1\fP cartesian point 
.br
\fIxc2\fP cartesian point 
.br
\fIaa\fP Mobius transformation complex coefficients 
.br
\fIbb\fP Mobius transformation complex coefficients 
.br
\fIcc\fP Mobius transformation complex coefficients 
.br
\fIdd\fP Mobius transformation complex coefficients 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2069 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::spintoq\fP (complex(dpc), dimension(2,2), intent(in) cspin, real(dp), dimension(0:3), intent(out) q)"

.PP
Go from the spinor to the quaternion representation\&. 
.PP
\fBParameters\fP
.RS 4
\fIcspin\fP spinor representation 
.br
\fIq\fP quaternion representation 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1517 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::trace_d (real(dp), dimension(:,:), intent(in) b)\fC [private]\fP"

.PP
Calculation for trace_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
s result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 570 of file pmat4\&.f90\&.
.SS "integer(spi) function pmat4::trace_i (integer(spi), dimension(:,:), intent(in) b)\fC [private]\fP"

.PP
Calculation for trace_i function\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP input value 
.RE
.PP
\fBReturns\fP
.RS 4
s result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 582 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::trace_s (real(sp), dimension(:,:), intent(in) b)\fC [private]\fP"

.PP
Calculation for trace_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIb\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
s result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 558 of file pmat4\&.f90\&.
.SS "real(dp) function, dimension(4) pmat4::triple_cross_product_d (real(dp), dimension(4), intent(in) u, real(dp), dimension(4), intent(in) v, real(dp), dimension(4), intent(in) w)\fC [private]\fP"

.PP
Doing calculation for triple_cross_product_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIu\fP vector 
.br
\fIv\fP vector 
.br
\fIw\fP vector 
.RE
.PP
\fBReturns\fP
.RS 4
x result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 254 of file pmat4\&.f90\&.
.SS "real(sp) function, dimension(4) pmat4::triple_cross_product_s (real(sp), dimension(4), intent(in) u, real(sp), dimension(4), intent(in) v, real(sp), dimension(4), intent(in) w)\fC [private]\fP"

.PP
Deliver the triple-cross-product, x, of the three 4-vectors, u, v, w, with the sign convention that ordered, {u,v,w,x} form a right-handed quartet in the generic case (determinant >= 0)\&. 
.PP
\fBParameters\fP
.RS 4
\fIu\fP vector 
.br
\fIv\fP vector 
.br
\fIw\fP vector 
.RE
.PP
\fBReturns\fP
.RS 4
x triple-cross-product vector 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 233 of file pmat4\&.f90\&.
.SS "real(dp) function pmat4::triple_product_d (real(dp), dimension(3), intent(in) a, real(dp), dimension(3), intent(in) b, real(dp), dimension(3), intent(in) c)\fC [private]\fP"

.PP
Calculation for triple_product_d function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.br
\fIb\fP real type input value 
.br
\fIc\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
tripleproduct result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 337 of file pmat4\&.f90\&.
.SS "real(sp) function pmat4::triple_product_s (real(sp), dimension(3), intent(in) a, real(sp), dimension(3), intent(in) b, real(sp), dimension(3), intent(in) c)\fC [private]\fP"

.PP
Calculation for triple_product_s function\&. 
.PP
\fBParameters\fP
.RS 4
\fIa\fP real type input value 
.br
\fIb\fP real type input value 
.br
\fIc\fP real type input value 
.RE
.PP
\fBReturns\fP
.RS 4
tripleproduct result 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 323 of file pmat4\&.f90\&.
.SS "subroutine pmat4::zmobius (complex(dpc), intent(in) aa, complex(dpc), intent(in) bb, complex(dpc), intent(in) cc, complex(dpc), intent(in) dd, complex(dpc), intent(in) z, logical, intent(in) infz, complex(dpc), intent(out) w, logical, intent(out) infw)\fC [private]\fP"

.PP
Perform a complex Mobius transformation from (z,infz) to (w,infw) where the transformation coefficients are the standard aa,bb,cc,dd\&. Infz is \&.TRUE\&. only when z is at complex infinity; likewise infw and w\&. For these infinite cases, it is important that numerical z==(0,0)\&.
.PP
\fBParameters\fP
.RS 4
\fIaa\fP Mobius transformation complex coefficients 
.br
\fIbb\fP Mobius transformation complex coefficients 
.br
\fIcc\fP Mobius transformation complex coefficients 
.br
\fIdd\fP Mobius transformation complex coefficients 
.br
\fIz\fP Mobius transformation complex coefficients 
.br
\fIinfz\fP point at infinity z 
.br
\fIw\fP Mobius transformation output 
.br
\fIinfw\fP point at infinity w 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2223 of file pmat4\&.f90\&.
.PP
Referenced by cmobius(), and zmobiusi()\&.
.SS "subroutine pmat4::zmobiusi (complex(dpc), intent(in) aa, complex(dpc), intent(in) bb, complex(dpc), intent(in) cc, complex(dpc), intent(in) dd, complex(dpc), intent(in) zz, logical, intent(in) infz, complex(dpc), intent(out) zw, logical, intent(out) infw)\fC [private]\fP"

.PP
Perform the inverse of the mobius transformation with coefficients, {aa,bb,cc,dd}\&. 
.PP
\fBParameters\fP
.RS 4
\fIaa\fP Mobius transformation coefficients 
.br
\fIbb\fP Mobius transformation coefficients 
.br
\fIcc\fP Mobius transformation coefficients 
.br
\fIdd\fP Mobius transformation coefficients 
.br
\fIzz\fP ??? 
.br
\fIinfz\fP ??? 
.br
\fIzw\fP Inversed output 
.br
\fIinfw\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2282 of file pmat4\&.f90\&.
.PP
References zmobius()\&.
.SS "subroutine, public \fBpmat4::znfun\fP (integer(spi), intent(in) n, real(dp), intent(in) z, real(dp), intent(out) zn, real(dp), intent(out) znd, real(dp), intent(out) zndd, real(dp), intent(out) znddd)"

.PP
??? 
.PP
\fBParameters\fP
.RS 4
\fIn\fP ??? 
.br
\fIz\fP ??? 
.br
\fIzn\fP ??? 
.br
\fIznd\fP ??? 
.br
\fIzndd\fP ??? 
.br
\fIznddd\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1911 of file pmat4\&.f90\&.
.PP
References pietc::u0, pietc::u2, and pietc::u3\&.
.SS "subroutine, public \fBpmat4::zntay\fP (integer(spi), intent(in) n, real(dp), intent(in) z, real(dp), intent(out) zn)"

.PP
??? 
.PP
\fBParameters\fP
.RS 4
\fIn\fP ??? 
.br
\fIz\fP ??? 
.br
\fIzn\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1874 of file pmat4\&.f90\&.
.PP
References pietc::u2\&.
.SS "subroutine pmat4::zsetmobius (complex(dp), intent(in) z0, logical, intent(in) infz0, complex(dp), intent(in) z1, logical, intent(in) infz1, complex(dp), intent(in) z2, logical, intent(in) infz2, complex(dpc), intent(out) aa, complex(dpc), intent(out) bb, complex(dpc), intent(out) cc, complex(dpc), intent(out) dd)\fC [private]\fP"

.PP
Find the Mobius transformation complex coefficients, aa,bb,cc,dd, with aa*dd-bb*cc=1, that takes polar stereographic point, z0 to the north pole, z1 to (lat=0,lon=0), z2 to the south pole (=complex infinity)\&. Should any one of z0,z1,z2 be itself the 'point at infinity' its corresponding infz will be set 'true' (and the z value itself not used)\&. This routine is like setmobius, except the three fixed points defining the mapping are given in standard complex stereographic form, together with the logical codes 'infzn' that are TRUE if that point is itself the projection pole (i\&.e\&., the South Pole for a north polar stereographic)\&.
.PP
\fBParameters\fP
.RS 4
\fIz0\fP polar stereographic point 
.br
\fIinfz0\fP point at infinity z0 
.br
\fIz1\fP polar stereographic point 
.br
\fIinfz1\fP point at infinity z0 
.br
\fIz2\fP polar stereographic point 
.br
\fIinfz2\fP point at infinity z0 
.br
\fIaa\fP Mobius transformation complex coefficients 
.br
\fIbb\fP Mobius transformation complex coefficients 
.br
\fIcc\fP Mobius transformation complex coefficients 
.br
\fIdd\fP Mobius transformation complex coefficients 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2152 of file pmat4\&.f90\&.
.SS "subroutine, public \fBpmat4::ztoc\fP (complex(dpc), intent(in) z, logical, intent(in) infz, real(dp), dimension(3), intent(out) v)"

.PP
??? 
.PP
\fBParameters\fP
.RS 4
\fIz\fP ??? 
.br
\fIinfz\fP ??? 
.br
\fIv\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 1999 of file pmat4\&.f90\&.
.SS "subroutine pmat4::ztocd (complex(dpc), intent(in) z, logical, intent(in) infz, real(dp), dimension(3), intent(out) v, complex(dpc), dimension(3), intent(out) vd)\fC [private]\fP"

.PP
The convention adopted for the complex derivative is that, for a complex infinitesimal map displacement, delta_z, the corresponding infinitesimal change of cartesian vector position is delta_v given by: delta_v = Real(vd*delta_z)\&. Thus, by a kind of Cauchy-Riemann relation, Imag(vd)=v CROSS Real(vd)\&.
.PP
\fBNote\fP
.RS 4
The derivative for the ideal point at infinity has not been coded yet\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIz\fP complex infinitesimal map displacement 
.br
\fIinfz\fP ??? 
.br
\fIv\fP cartesian vector position 
.br
\fIvd\fP ??? 
.RE
.PP
\fBAuthor\fP
.RS 4
R\&. J\&. Purser 
.RE
.PP

.PP
Definition at line 2029 of file pmat4\&.f90\&.
.PP
References pkind::dpc\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for grid_tools from the source code\&.
