.TH "/home/ed/UFS_UTILS/sorc/orog_mask_tools.fd/lake.fd/find_limit.F90" 3 "Thu Mar 11 2021" "Version 1.0.0" "orog_mask_tools" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/ed/UFS_UTILS/sorc/orog_mask_tools.fd/lake.fd/find_limit.F90
.SH SYNOPSIS
.br
.PP
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine \fBfind_limit\fP (p1_in, p2_in, latmin, latmax)"
.br
.ti -1c
.RI "subroutine \fBmiddle\fP (p1, p2, p)"
.br
.RI "This subroutine computes the latitude and longitude of the middle point between two given ponits\&. "
.in -1c
.SH "Function/Subroutine Documentation"
.PP 
.SS "subroutine middle (real*8, dimension(2), intent(in) p1, real*8, dimension(2), intent(in) p2, real*8, dimension(2), intent(out) p)"

.PP
This subroutine computes the latitude and longitude of the middle point between two given ponits\&. There are two formulae available to compute it\&.
.PP
One derived from a more general m-sect formula: 
.PP
.nf

  xyz = sin((1-f)*theta) / sin(theta) * xyz1 +
        sin(f*theta) /sin(theta) * xyz2 ;
  where theta is the angle of xyz1, and xyz2\&.
  
.fi
.PP
.PP
.PP
.nf

  xyz = 0\&.5 / sqrt[(1+dot(xyz1,xyz2))/2] * (xyz1+xyz2)
  
.fi
.PP
.PP
and the other one is the normalized middle point of the two end points:
.PP
.PP
.nf

  xyz = 0\&.5 * (xyz1+xyz2), xyz = xyz / sqrt(dot(xyz,xyz))
  
.fi
.PP
.PP
\fBAuthor\fP
.RS 4
Ning Wang 
.RE
.PP
\fBDate\fP
.RS 4
March, 2006 
.RE
.PP

.PP
Definition at line 67 of file find_limit\&.F90\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for orog_mask_tools from the source code\&.
