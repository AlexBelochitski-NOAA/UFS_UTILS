.TH "/home/ed/UFS_UTILS/sorc/chgres_cube.fd/surface.F90" 3 "Thu Mar 18 2021" "Version 1.0.0" "chgres_cube" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/ed/UFS_UTILS/sorc/chgres_cube.fd/surface.F90 \- Process land, sea/lake ice, open water/Near Sea Surface Temperature (NSST) fields\&.  

.SH SYNOPSIS
.br
.PP
.SS "Modules"

.in +1c
.ti -1c
.RI "module \fBsurface\fP"
.br
.RI "Process surface and nst fields\&. "
.in -1c
.SS "Functions/Subroutines"

.in +1c
.ti -1c
.RI "subroutine \fBsurface::adjust_soil_levels\fP (localpet)"
.br
.RI "Adjust soil levels of the input grid if there is a mismatch between input and target grids\&. "
.ti -1c
.RI "subroutine \fBsurface::adjust_soilt_for_terrain\fP"
.br
.RI "Adjust soil temperature for changes in terrain height between the input and target grids\&. "
.ti -1c
.RI "subroutine \fBsurface::calc_liq_soil_moisture\fP"
.br
.RI "Compute liquid portion of the total soil moisture\&. "
.ti -1c
.RI "subroutine \fBsurface::check_smois_land\fP"
.br
.RI "Check soil mositure\&. "
.ti -1c
.RI "subroutine \fBsurface::cleanup_target_nst_data\fP"
.br
.RI "Free up memory once the target grid nst fields are no longer needed\&. "
.ti -1c
.RI "subroutine \fBsurface::cleanup_target_sfc_data\fP"
.br
.RI "Free up memory once the target grid surface fields are no longer needed\&. "
.ti -1c
.RI "subroutine \fBsurface::create_nst_esmf_fields\fP"
.br
.RI "Create ESMF fields for the target grid nst variables\&. "
.ti -1c
.RI "subroutine \fBsurface::create_surface_esmf_fields\fP"
.br
.RI "Create ESMF fields for the target grid surface variables\&. "
.ti -1c
.RI "real function \fBsurface::frh2o\fP (TKELV, SMC, SH2O, SMCMAX, BEXP, PSIS)"
.br
.RI "Calculate supercooled soil moisture\&. "
.ti -1c
.RI "subroutine \fBsurface::ij_to_i_j\fP (ij, itile, jtile, i, j)"
.br
.RI "Convert 1d index to 2d indices\&. "
.ti -1c
.RI "subroutine \fBsurface::interp\fP (localpet)"
.br
.RI "Horizontally interpolate surface fields from input to target FV3 grid using esmf routines\&. "
.ti -1c
.RI "subroutine \fBsurface::nst_land_fill\fP"
.br
.RI "nst is not active at land or sea ice points\&. "
.ti -1c
.RI "subroutine \fBsurface::qc_check\fP"
.br
.RI "Perform some quality control checks before output\&. "
.ti -1c
.RI "subroutine \fBsurface::replace_land_sfcparams\fP (localpet)"
.br
.RI "Replace bad surface points\&. "
.ti -1c
.RI "subroutine \fBsurface::rescale_soil_moisture\fP"
.br
.RI "Adjust soil moisture for changes in soil type between the input and target grids\&. "
.ti -1c
.RI "subroutine \fBsurface::roughness\fP"
.br
.RI "Set roughness length at land and sea ice\&. "
.ti -1c
.RI "subroutine, public \fBsurface::surface_driver\fP (localpet)"
.br
.RI "Driver routine to process surface/nst data\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "real, parameter, private \fBsurface::blim\fP = 5\&.5"
.br
.RI "soil 'b' parameter limit "
.ti -1c
.RI "type(esmf_field), public \fBsurface::c_0_target_grid\fP"
.br
.RI "Coefficient 1 to calculate d(tz)/d(ts) "
.ti -1c
.RI "type(esmf_field), public \fBsurface::c_d_target_grid\fP"
.br
.RI "Coefficient 2 to calculate d(tz)/d(ts) "
.ti -1c
.RI "type(esmf_field), public \fBsurface::canopy_mc_target_grid\fP"
.br
.RI "canopy moisture content "
.ti -1c
.RI "type(esmf_field), public \fBsurface::d_conv_target_grid\fP"
.br
.RI "Thickness of free convection layer\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::dt_cool_target_grid\fP"
.br
.RI "Sub-layer cooling amount\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::f10m_target_grid\fP"
.br
.RI "log((z0+10)*1/z0) See sfc_diff\&.f for details "
.ti -1c
.RI "type(esmf_field), public \fBsurface::ffmm_target_grid\fP"
.br
.RI "log((z0+z1)*1/z0) See sfc_diff\&.f for details "
.ti -1c
.RI "real, parameter, private \fBsurface::frz_h2o\fP = 273\&.15"
.br
.RI "melting pt water "
.ti -1c
.RI "real, parameter, private \fBsurface::frz_ice\fP = 271\&.21"
.br
.RI "melting pt sea ice "
.ti -1c
.RI "real, parameter, private \fBsurface::grav\fP = 9\&.81"
.br
.RI "gravity "
.ti -1c
.RI "real, parameter, private \fBsurface::hlice\fP = 3\&.335E5"
.br
.RI "latent heat of fusion "
.ti -1c
.RI "type(esmf_field), public \fBsurface::ifd_target_grid\fP"
.br
.RI "Model mode index\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::lai_target_grid\fP"
.br
.RI "leaf area index "
.ti -1c
.RI "type(esmf_field), public \fBsurface::q2m_target_grid\fP"
.br
.RI "2-m specific humidity "
.ti -1c
.RI "type(esmf_field), public \fBsurface::qrain_target_grid\fP"
.br
.RI "Sensible heat flux due to rainfall\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::seaice_depth_target_grid\fP"
.br
.RI "sea ice depth "
.ti -1c
.RI "type(esmf_field), public \fBsurface::seaice_fract_target_grid\fP"
.br
.RI "sea ice fraction "
.ti -1c
.RI "type(esmf_field), public \fBsurface::seaice_skin_temp_target_grid\fP"
.br
.RI "sea ice skin temperature "
.ti -1c
.RI "type(esmf_field), public \fBsurface::skin_temp_target_grid\fP"
.br
.RI "skin temperature/sst "
.ti -1c
.RI "type(esmf_field), public \fBsurface::snow_depth_target_grid\fP"
.br
.RI "physical snow depth "
.ti -1c
.RI "type(esmf_field), public \fBsurface::snow_liq_equiv_target_grid\fP"
.br
.RI "liquid equiv snow depth "
.ti -1c
.RI "type(esmf_field), public \fBsurface::soil_temp_target_grid\fP"
.br
.RI "3-d soil temperature "
.ti -1c
.RI "type(esmf_field) \fBsurface::soil_type_from_input_grid\fP"
.br
.RI "soil type interpolated from input grid "
.ti -1c
.RI "type(esmf_field), public \fBsurface::soilm_liq_target_grid\fP"
.br
.RI "3-d liquid soil moisture "
.ti -1c
.RI "type(esmf_field), public \fBsurface::soilm_tot_target_grid\fP"
.br
.RI "3-d total soil moisture "
.ti -1c
.RI "type(esmf_field), public \fBsurface::srflag_target_grid\fP"
.br
.RI "snow/rain flag "
.ti -1c
.RI "type(esmf_field), public \fBsurface::t2m_target_grid\fP"
.br
.RI "2-m temperatrure "
.ti -1c
.RI "type(esmf_field) \fBsurface::terrain_from_input_grid\fP"
.br
.RI "terrain height interpolated from input grid "
.ti -1c
.RI "type(esmf_field) \fBsurface::terrain_from_input_grid_land\fP"
.br
.RI "terrain height interpolated from input grid at all land points "
.ti -1c
.RI "type(esmf_field), public \fBsurface::tprcp_target_grid\fP"
.br
.RI "precip "
.ti -1c
.RI "type(esmf_field), public \fBsurface::tref_target_grid\fP"
.br
.RI "reference temperature "
.ti -1c
.RI "type(esmf_field), public \fBsurface::ustar_target_grid\fP"
.br
.RI "friction velocity "
.ti -1c
.RI "integer, parameter \fBsurface::veg_type_landice_target\fP = 15"
.br
.RI "Vegetation type category that defines permanent land ice points\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::w_0_target_grid\fP"
.br
.RI "Coefficient 3 to calculate d(tz)/d(ts) "
.ti -1c
.RI "type(esmf_field), public \fBsurface::w_d_target_grid\fP"
.br
.RI "Coefficient 4 to calculate d(tz)/d(ts) "
.ti -1c
.RI "type(esmf_field), public \fBsurface::xs_target_grid\fP"
.br
.RI "Salinity content in diurnal thermocline layer\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::xt_target_grid\fP"
.br
.RI "Heat content in diurnal thermocline layer\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::xtts_target_grid\fP"
.br
.RI "d(xt)/d(ts) "
.ti -1c
.RI "type(esmf_field), public \fBsurface::xu_target_grid\fP"
.br
.RI "u-current content in diurnal thermocline layer "
.ti -1c
.RI "type(esmf_field), public \fBsurface::xv_target_grid\fP"
.br
.RI "v-current content in diurnal thermocline layer "
.ti -1c
.RI "type(esmf_field), public \fBsurface::xz_target_grid\fP"
.br
.RI "Diurnal thermocline layer thickness\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::xzts_target_grid\fP"
.br
.RI "d(xz)/d(ts) "
.ti -1c
.RI "type(esmf_field), public \fBsurface::z0_target_grid\fP"
.br
.RI "roughness length "
.ti -1c
.RI "type(esmf_field), public \fBsurface::z_c_target_grid\fP"
.br
.RI "Sub-layer cooling thickness\&. "
.ti -1c
.RI "type(esmf_field), public \fBsurface::zm_target_grid\fP"
.br
.RI "Oceanic mixed layer depth\&. "
.in -1c
.SH "Detailed Description"
.PP 
Process land, sea/lake ice, open water/Near Sea Surface Temperature (NSST) fields\&. 


.PP
\fBAuthor\fP
.RS 4
George Gayno NCEP/EMC 
.RE
.PP

.PP
Definition in file \fBsurface\&.F90\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for chgres_cube from the source code\&.
